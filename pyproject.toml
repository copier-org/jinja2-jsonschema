[project]
name = "jinja2-jsonschema"
version = "0.3.0"
description = "JSON/YAML schema validation within Jinja2 templates"
license = { text = "MIT" }
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13"
]
keywords = ["jinja", "jinja2", "extension", "jsonschema", "json", "yaml"]
authors = [{ name = "Sigurd Spieckermann", email = "sigurd.spieckermann@gmail.com" }]
readme = "README.md"
dependencies = [
  "jinja2>=3.0.0",
  "jsonschema>=4.18.0",
  "referencing>=0.28.4"
]

[project.urls]
Homepage = "https://github.com/copier-org/jinja2-jsonschema"
Repository = "https://github.com/copier-org/jinja2-jsonschema"

[project.optional-dependencies]
yaml = ["pyyaml>=6.0.0"]

[tool.uv]
dev-dependencies = [
  # dev
  "mypy==1.12.0",
  "pre-commit==4.0.1",
  "pre-commit-hooks==5.0.0",
  "ruff==0.6.9",

  # test
  "pychoir==0.0.27",
  "pytest==8.3.3",
  "pytest-cov==5.0.0",

  # typing
  "types-jsonschema==4.23.0.20240813",
  "types-pyyaml==6.0.12.20240917"
]

[tool.ruff]
src = ["src"]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
ignore = ["D100", "D104", "D107", "ISC001"]
select = ["ALL"]

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.isort]
force-single-line = true
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 7

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["ANN401", "ARG001", "S101", "S701"]

[tool.mypy]
implicit_reexport = true
strict = true

[tool.pytest.ini_options]
addopts = "--cov --cov-report=term-missing"

[tool.coverage.run]
source_pkgs = ["jinja2_jsonschema"]
omit = ["tests"]

[tool.hatch.build.targets.sdist]
packages = ["src/jinja2_jsonschema"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

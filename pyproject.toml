[tool.poetry]
name = "jinja2-jsonschema"
version = "0.2.1"
description = "JSON/YAML schema validation within Jinja2 templates"
license = "MIT"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13"
]
keywords = ["jinja", "jinja2", "extension", "jsonschema", "json", "yaml"]
authors = ["Sigurd Spieckermann <sigurd.spieckermann@gmail.com>"]
packages = [{ include = "jinja2_jsonschema", from = "src" }]
readme = "README.md"
homepage = "https://github.com/copier-org/jinja2-jsonschema"
repository = "https://github.com/copier-org/jinja2-jsonschema"

[tool.poetry.dependencies]
python = ">=3.9"
jinja2 = ">=3.0.0"
jsonschema = ">=4.0.0"
pyyaml = { version = ">=6.0.0", optional = true }

[tool.poetry.extras]
yaml = ["pyyaml"]

[tool.poetry.group.dev.dependencies]
mypy = ">=1.3.0"
pre-commit = ">=2.21.0"
pre-commit-hooks = ">=4.4.0"
ruff = ">=0.2.0"

[tool.poetry.group.test.dependencies]
pychoir = ">=0.0.27"
pytest = ">=7.3.1"
pytest-cov = ">=4.0.0"

[tool.poetry.group.typing.dependencies]
types-jsonschema = ">=4.0.0"
types-pyyaml = ">=6.0.12.10"

[tool.ruff]
src = ["src"]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
ignore = ["D100", "D104", "D107", "ISC001"]
select = ["ALL"]

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.isort]
force-single-line = true
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 7

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["ANN401", "ARG001", "S101", "S701"]

[tool.mypy]
implicit_reexport = true
strict = true

[tool.pytest.ini_options]
addopts = "--cov --cov-report=term-missing"

[tool.coverage.run]
source_pkgs = ["jinja2_jsonschema"]
omit = ["tests"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
